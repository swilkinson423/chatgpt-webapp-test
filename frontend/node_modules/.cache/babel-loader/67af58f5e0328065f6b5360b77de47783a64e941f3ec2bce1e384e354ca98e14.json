{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Scott\\\\OneDrive\\\\Programming\\\\chatgpt-webapp-test\\\\frontend\\\\src\\\\components\\\\_SharedStateComponent.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SharedStateContext = /*#__PURE__*/createContext();\nexport function SharedStateProvider({\n  children\n}) {\n  _s();\n  // Used to set the UI colors.\n  const [activeHue, setActiveHue] = useState(200);\n\n  // Determines which applet is rendered.\n  const [appletViewState, setAppletViewState] = useState(\"all-clients\");\n\n  // Holds the active client list\n  const [clients, setClients] = useState([]);\n\n  // Determines which client is rendered.\n  const [activeClientID, setActiveClientID] = useState(0);\n\n  // Determines which client is rendered.\n  const [activeClient, setActiveClient] = useState({\n    name: '',\n    website: '',\n    description: '',\n    descriptionaddon: '',\n    products: '',\n    personas: '',\n    linkedin: '',\n    youtube: '',\n    twitter: '',\n    facebook: '',\n    instagram: '',\n    tiktok: ''\n  });\n  return /*#__PURE__*/_jsxDEV(SharedStateContext.Provider, {\n    value: {\n      activeHue,\n      setActiveHue,\n      appletViewState,\n      setAppletViewState,\n      clients,\n      setClients,\n      activeClientID,\n      setActiveClientID,\n      activeClient,\n      setActiveClient\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n_s(SharedStateProvider, \"VgfHz3zjEqdKi9bqxyAtlLPHUYU=\");\n_c = SharedStateProvider;\nvar _c;\n$RefreshReg$(_c, \"SharedStateProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","SharedStateContext","SharedStateProvider","children","_s","activeHue","setActiveHue","appletViewState","setAppletViewState","clients","setClients","activeClientID","setActiveClientID","activeClient","setActiveClient","name","website","description","descriptionaddon","products","personas","linkedin","youtube","twitter","facebook","instagram","tiktok","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Scott/OneDrive/Programming/chatgpt-webapp-test/frontend/src/components/_SharedStateComponent.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const SharedStateContext = createContext();\r\n\r\nexport function SharedStateProvider({ children }) {\r\n\r\n\t// Used to set the UI colors.\r\n\tconst [activeHue, setActiveHue] = useState(200);\r\n\t\r\n\t// Determines which applet is rendered.\r\n\tconst [appletViewState, setAppletViewState] = useState(\"all-clients\");\r\n\r\n\t// Holds the active client list\r\n\tconst [clients, setClients] = useState([]);\r\n\r\n\t// Determines which client is rendered.\r\n\tconst [activeClientID, setActiveClientID] = useState(0);\r\n\r\n\t// Determines which client is rendered.\r\n\tconst [activeClient, setActiveClient] = useState({\r\n\t\tname: '', \r\n\t\twebsite: '',\r\n\t\tdescription: '', \r\n\t\tdescriptionaddon: '',\r\n\t\tproducts: '',\r\n\t\tpersonas: '',\r\n\t\tlinkedin: '',\r\n\t\tyoutube: '',\r\n\t\ttwitter: '',\r\n\t\tfacebook: '',\r\n\t\tinstagram: '',\r\n\t\ttiktok: ''\r\n\t});\r\n\t\r\n \r\n\r\n\treturn (\r\n\t\t<SharedStateContext.Provider value=\t{{ \r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveHue,\t\t\tsetActiveHue,\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tappletViewState, \tsetAppletViewState, \r\n\t\t\t\t\t\t\t\t\t\t\t\tclients,\t\t\tsetClients,\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveClientID, \tsetActiveClientID,\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveClient, \t\tsetActiveClient\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t{children}\r\n\t\t</SharedStateContext.Provider>\r\n\t);\r\n\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,kBAAkB,gBAAGJ,aAAa,CAAC,CAAC;AAEjD,OAAO,SAASK,mBAAmBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAEjD;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,GAAG,CAAC;;EAE/C;EACA,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,aAAa,CAAC;;EAErE;EACA,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC;IAChDiB,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,EAAE;IACfC,gBAAgB,EAAE,EAAE;IACpBC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE;EACT,CAAC,CAAC;EAIF,oBACC1B,OAAA,CAACC,kBAAkB,CAAC0B,QAAQ;IAACC,KAAK,EAAG;MAC3BvB,SAAS;MAAIC,YAAY;MACzBC,eAAe;MAAGC,kBAAkB;MACpCC,OAAO;MAAIC,UAAU;MACrBC,cAAc;MAAGC,iBAAiB;MAClCC,YAAY;MAAIC;IACjB,CAAE;IAAAX,QAAA,EACTA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAGhC;AAAC5B,EAAA,CA5CeF,mBAAmB;AAAA+B,EAAA,GAAnB/B,mBAAmB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}