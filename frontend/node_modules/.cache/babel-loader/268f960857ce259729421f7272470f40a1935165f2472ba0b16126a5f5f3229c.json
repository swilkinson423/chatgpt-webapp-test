{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Scott\\\\OneDrive\\\\Programming\\\\chatgpt-webapp-test\\\\frontend\\\\src\\\\components\\\\views\\\\Applet-Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { SharedStateContext } from './../_SharedStateComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppletSettings() {\n  _s();\n  const {\n    activeHue,\n    setActiveHue\n  } = useContext(SharedStateContext);\n  const setHue = hue => {\n    try {\n      if (hue === 200) {\n        hue = 100;\n      } else {\n        hue = 200;\n      }\n      setActiveHue(hue);\n    } catch (err) {\n      console.log(\"Error setting the active hue from the settings menu\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"applet-add-new\",\n    className: \"App container col\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-3\",\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hello World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onclick: setHue(activeHue),\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n}\n_s(AppletSettings, \"KF12Mn8lp2+U2xj4XJg8hG6Lmf8=\");\n_c = AppletSettings;\n;\nvar _c;\n$RefreshReg$(_c, \"AppletSettings\");","map":{"version":3,"names":["React","useContext","useState","useEffect","SharedStateContext","jsxDEV","_jsxDEV","AppletSettings","_s","activeHue","setActiveHue","setHue","hue","err","console","log","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onclick","_c","$RefreshReg$"],"sources":["C:/Users/Scott/OneDrive/Programming/chatgpt-webapp-test/frontend/src/components/views/Applet-Settings.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { SharedStateContext } from './../_SharedStateComponent';\r\n\r\n\r\nexport default function AppletSettings(){\r\n\r\n\tconst { activeHue, setActiveHue } = useContext(SharedStateContext);\r\n\r\n\tconst setHue = (hue) => {\t\r\n\t\ttry {\r\n\r\n\t\t\tif (hue === 200) {\r\n\t\t\t\thue = 100;\r\n\t\t\t} else {\r\n\t\t\t\thue = 200;\r\n\t\t\t}\r\n\t\t\tsetActiveHue(hue);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(\"Error setting the active hue from the settings menu\", err);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"applet-add-new\" className=\"App container col\">\r\n\r\n\t\t\t<h2 className=\"mb-3\">Add New Task</h2>\r\n\t\t\t<div>Hello World</div>\r\n\t\t\t<button onclick={setHue(activeHue)}>hello</button>\r\n\t\t\t\t\t\r\n\t\t</div>\r\n\t);\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,kBAAkB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhE,eAAe,SAASC,cAAcA,CAAA,EAAE;EAAAC,EAAA;EAEvC,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGT,UAAU,CAACG,kBAAkB,CAAC;EAElE,MAAMO,MAAM,GAAIC,GAAG,IAAK;IACvB,IAAI;MAEH,IAAIA,GAAG,KAAK,GAAG,EAAE;QAChBA,GAAG,GAAG,GAAG;MACV,CAAC,MAAM;QACNA,GAAG,GAAG,GAAG;MACV;MACAF,YAAY,CAACE,GAAG,CAAC;IAClB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACbC,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAEF,GAAG,CAAC;IACxE;EACD,CAAC;EAED,oBACCP,OAAA;IAAKU,EAAE,EAAC,gBAAgB;IAACC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAErDZ,OAAA;MAAIW,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtChB,OAAA;MAAAY,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBhB,OAAA;MAAQiB,OAAO,EAAEZ,MAAM,CAACF,SAAS,CAAE;MAAAS,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9C,CAAC;AAER;AAACd,EAAA,CA3BuBD,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AA2BrC;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}