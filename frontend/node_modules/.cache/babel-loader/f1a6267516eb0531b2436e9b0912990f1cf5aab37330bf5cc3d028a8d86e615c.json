{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Scott\\\\OneDrive\\\\Programming\\\\chatgpt-webapp-test\\\\frontend\\\\src\\\\components\\\\Applet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AppletAddNew from './Applet-AddNew';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Applet() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [appletViewState, setAppletViewState] = useState({\n    value: \"home\"\n  });\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Fetch all tasks from the back-end API\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/tasks');\n      setTasks(response.data);\n    } catch (err) {\n      console.error('Error fetching tasks:', err);\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/tasks/${id}`);\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (err) {\n      console.error('Error deleting task:', err);\n    }\n  };\n\n  // Update a task\n  const updateTask = async () => {\n    try {\n      const response = await axios.put(`http://localhost:3000/tasks/${currentTask.id}`, currentTask);\n      setTasks(tasks.map(task => task.id === currentTask.id ? response.data : task));\n      setIsEditing(false);\n      setCurrentTask(null);\n    } catch (err) {\n      console.error('Error updating task:', err);\n    }\n  };\n\n  // Set current task for editing\n  const handleEdit = task => {\n    setCurrentTask(task);\n    setIsEditing(true);\n  };\n\n  // Handle form input for editing tasks\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentTask(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const renderAppletView = () => {\n    console.log(\"[APPLET] Setting Applet View. Var 'appletView' = \" + appletView.value);\n    switch (appletView.value) {\n      case 'home':\n        setRenderView({\n          value: \"<div id='test'>'Hello world   1'</div>\"\n        });\n        break;\n      case 'clients':\n        // /* Update Existing Task */\n        // if (isEditing === true) {\n        //   // <div className=\"card mb-4 p-3\">\n        //   //   <h2 className=\"mb-3\">Edit Task</h2>\n        //   //   <input\n        //   //     type=\"text\"\n        //   //     name=\"title\"\n        //   //     placeholder=\"Task title\"\n        //   //     className=\"form-control mb-3\"\n        //   //     value={currentTask.title}\n        //   //     onChange={handleEditChange}\n        //   //   />\n        //   //   <textarea\n        //   //     name=\"description\"\n        //   //     placeholder=\"Task description\"\n        //   //     className=\"form-control mb-3\"\n        //   //     value={currentTask.description}\n        //   //     onChange={handleEditChange}\n        //   //   />\n        //   //   <button className=\"btn btn-success\" onClick={updateTask}>Update Task</button>\n        //   // </div>\n        // };\n\n        // /* Display Tasks */\n        // <div className=\"list-group\">\n        //   {tasks.map((task) => (\n        //     <div className=\"list-group-item d-flex justify-content-between align-items-center\" key={task.id}>\n        //       <div>\n        //         <h5>{task.title}</h5>\n        //         <p>{task.description}</p>\n        //       </div>\n        //       <div>\n        //         <button className=\"btn btn-danger\" onClick={() => deleteTask(task.id)}>Delete</button>\n        //         <button className=\"btn btn-secondary ms-2\" onClick={() => handleEdit(task)}>Edit</button>\n        //       </div>\n        //     </div>\n        //   ))}\n        // </div>\n        setRenderView({\n          value: \"<div id='test'>'Hello world   2'</div>\"\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"applet\",\n    className: \"App container col\",\n    children: appletViewState === \"home\" ? /*#__PURE__*/_jsxDEV(AppletAddNew, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(Applet, \"PiD0NMIZzKu4zzfRgTnAAOWOBbA=\");\n_c = Applet;\nexport default Applet;\nvar _c;\n$RefreshReg$(_c, \"Applet\");","map":{"version":3,"names":["React","useState","useEffect","axios","AppletAddNew","jsxDEV","_jsxDEV","Fragment","_Fragment","Applet","_s","tasks","setTasks","isEditing","setIsEditing","currentTask","setCurrentTask","appletViewState","setAppletViewState","value","fetchTasks","response","get","data","err","console","error","deleteTask","id","delete","filter","task","updateTask","put","map","handleEdit","handleEditChange","e","name","target","prev","renderAppletView","log","appletView","setRenderView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Scott/OneDrive/Programming/chatgpt-webapp-test/frontend/src/components/Applet.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport AppletAddNew from './Applet-AddNew';\n\nfunction Applet() {\n  const [tasks, setTasks] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n\n  const [appletViewState, setAppletViewState] = useState({value: \"home\"});\n\n\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Fetch all tasks from the back-end API\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/tasks');\n      setTasks(response.data);\n    } catch (err) {\n      console.error('Error fetching tasks:', err);\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async (id) => {\n    try {\n      await axios.delete(`http://localhost:3000/tasks/${id}`);\n      setTasks(tasks.filter((task) => task.id !== id));\n    } catch (err) {\n      console.error('Error deleting task:', err);\n    }\n  };\n\n  // Update a task\n  const updateTask = async () => {\n    try {\n      const response = await axios.put(`http://localhost:3000/tasks/${currentTask.id}`, currentTask);\n      setTasks(tasks.map((task) => (task.id === currentTask.id ? response.data : task)));\n      setIsEditing(false);\n      setCurrentTask(null);\n    } catch (err) {\n      console.error('Error updating task:', err);\n    }\n  };\n\n  // Set current task for editing\n  const handleEdit = (task) => {\n    setCurrentTask(task);\n    setIsEditing(true);\n  };\n\n  // Handle form input for editing tasks\n  const handleEditChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentTask((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n\n\n  const renderAppletView = () => {\n    \n    console.log(\"[APPLET] Setting Applet View. Var 'appletView' = \" + appletView.value);\n\n    switch (appletView.value) {\n\n      case 'home':\n        setRenderView({value: \"<div id='test'>'Hello world   1'</div>\"});\n        break;\n\n\n      case 'clients':\n        // /* Update Existing Task */\n        // if (isEditing === true) {\n        //   // <div className=\"card mb-4 p-3\">\n        //   //   <h2 className=\"mb-3\">Edit Task</h2>\n        //   //   <input\n        //   //     type=\"text\"\n        //   //     name=\"title\"\n        //   //     placeholder=\"Task title\"\n        //   //     className=\"form-control mb-3\"\n        //   //     value={currentTask.title}\n        //   //     onChange={handleEditChange}\n        //   //   />\n        //   //   <textarea\n        //   //     name=\"description\"\n        //   //     placeholder=\"Task description\"\n        //   //     className=\"form-control mb-3\"\n        //   //     value={currentTask.description}\n        //   //     onChange={handleEditChange}\n        //   //   />\n        //   //   <button className=\"btn btn-success\" onClick={updateTask}>Update Task</button>\n        //   // </div>\n        // };\n\n        // /* Display Tasks */\n        // <div className=\"list-group\">\n        //   {tasks.map((task) => (\n        //     <div className=\"list-group-item d-flex justify-content-between align-items-center\" key={task.id}>\n        //       <div>\n        //         <h5>{task.title}</h5>\n        //         <p>{task.description}</p>\n        //       </div>\n        //       <div>\n        //         <button className=\"btn btn-danger\" onClick={() => deleteTask(task.id)}>Delete</button>\n        //         <button className=\"btn btn-secondary ms-2\" onClick={() => handleEdit(task)}>Edit</button>\n        //       </div>\n        //     </div>\n        //   ))}\n        // </div>\n        setRenderView({value: \"<div id='test'>'Hello world   2'</div>\"});\n        break;\n\n      default:\n        break;\n    }\n\n\n\n  };\n\n  return (\n    <div id=\"applet\" className=\"App container col\">\n\n      {appletViewState === \"home\" ? (\n        <AppletAddNew />\n      ) : (\n        <></>\n      )}\n\n    </div>\n  );\n}\n\nexport default Applet;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}