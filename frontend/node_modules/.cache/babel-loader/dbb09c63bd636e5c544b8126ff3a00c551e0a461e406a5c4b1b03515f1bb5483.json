{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Scott\\\\OneDrive\\\\Programming\\\\chatgpt-webapp-test\\\\frontend\\\\src\\\\components\\\\Applet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { appletView } from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Applet() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: ''\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Fetch all tasks from the back-end API\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/tasks');\n      setTasks(response.data);\n    } catch (err) {\n      console.error('Error fetching tasks:', err);\n    }\n  };\n\n  // Handle form input for new tasks\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTask(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Create a new task\n  const addTask = async () => {\n    try {\n      const response = await axios.post('http://localhost:3000/tasks', newTask);\n      setTasks([...tasks, response.data]);\n      setNewTask({\n        title: '',\n        description: ''\n      });\n    } catch (err) {\n      console.error('Error adding task:', err);\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/tasks/${id}`);\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (err) {\n      console.error('Error deleting task:', err);\n    }\n  };\n\n  // Update a task\n  const updateTask = async () => {\n    try {\n      const response = await axios.put(`http://localhost:3000/tasks/${currentTask.id}`, currentTask);\n      setTasks(tasks.map(task => task.id === currentTask.id ? response.data : task));\n      setIsEditing(false);\n      setCurrentTask(null);\n    } catch (err) {\n      console.error('Error updating task:', err);\n    }\n  };\n\n  // Set current task for editing\n  const handleEdit = task => {\n    setCurrentTask(task);\n    setIsEditing(true);\n  };\n\n  // Handle form input for editing tasks\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentTask(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const setAppletView = view => {\n    console.log(view);\n    switch (view) {\n      case 'home':\n        /**/\n        return \"\";\n        break;\n      case 'clients':\n        /* Update Existing Task */\n        if (isEditing === true) {\n          // <div className=\"card mb-4 p-3\">\n          //   <h2 className=\"mb-3\">Edit Task</h2>\n          //   <input\n          //     type=\"text\"\n          //     name=\"title\"\n          //     placeholder=\"Task title\"\n          //     className=\"form-control mb-3\"\n          //     value={currentTask.title}\n          //     onChange={handleEditChange}\n          //   />\n          //   <textarea\n          //     name=\"description\"\n          //     placeholder=\"Task description\"\n          //     className=\"form-control mb-3\"\n          //     value={currentTask.description}\n          //     onChange={handleEditChange}\n          //   />\n          //   <button className=\"btn btn-success\" onClick={updateTask}>Update Task</button>\n          // </div>\n        }\n        ;\n\n        // /* Display Tasks */\n        // <div className=\"list-group\">\n        //   {tasks.map((task) => (\n        //     <div className=\"list-group-item d-flex justify-content-between align-items-center\" key={task.id}>\n        //       <div>\n        //         <h5>{task.title}</h5>\n        //         <p>{task.description}</p>\n        //       </div>\n        //       <div>\n        //         <button className=\"btn btn-danger\" onClick={() => deleteTask(task.id)}>Delete</button>\n        //         <button className=\"btn btn-secondary ms-2\" onClick={() => handleEdit(task)}>Edit</button>\n        //       </div>\n        //     </div>\n        //   ))}\n        // </div>\n        return `<div>'Hello'</div></br></br><div>'world'</div>`;\n        break;\n      case 'new-client':\n        /* --+-- ADD NEW CLIENT--+-- */\n        // <div className=\"card mb-4 p-3\">\n        //   <h2 className=\"mb-3\">Add New Task</h2>\n        //   <input\n        //     type=\"text\"\n        //     name=\"title\"\n        //     placeholder=\"Task title\"\n        //     className=\"form-control mb-3\"\n        //     value={newTask.title}\n        //     onChange={handleInputChange}\n        //   />\n        //   <textarea\n        //     name=\"description\"\n        //     placeholder=\"Task description\"\n        //     className=\"form-control mb-3\"\n        //     value={newTask.description}\n        //     onChange={handleInputChange}\n        //   />\n        //   <button className=\"btn btn-primary\" onClick={addTask}>Add Task</button>\n        // </div>\n        return '<div>\"Hello\"</div></br></br><div>\"world\"</div>';\n        break;\n      default:\n        return \"hedddddddddddddddlp\";\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"applet\",\n    className: \"App container col\",\n    children: setAppletView(appletView)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(Applet, \"7ZxX97Ki80mppWNxjG18PswaBm8=\");\n_c = Applet;\nexport default Applet;\nvar _c;\n$RefreshReg$(_c, \"Applet\");","map":{"version":3,"names":["React","useState","useEffect","axios","appletView","jsxDEV","_jsxDEV","Applet","_s","tasks","setTasks","newTask","setNewTask","title","description","isEditing","setIsEditing","currentTask","setCurrentTask","fetchTasks","response","get","data","err","console","error","handleInputChange","e","name","value","target","prev","addTask","post","deleteTask","id","delete","filter","task","updateTask","put","map","handleEdit","handleEditChange","setAppletView","view","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Scott/OneDrive/Programming/chatgpt-webapp-test/frontend/src/components/Applet.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { appletView } from './Navbar';\n\nfunction Applet() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({ title: '', description: '' });\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Fetch all tasks from the back-end API\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/tasks');\n      setTasks(response.data);\n    } catch (err) {\n      console.error('Error fetching tasks:', err);\n    }\n  };\n\n  // Handle form input for new tasks\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewTask((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Create a new task\n  const addTask = async () => {\n    try {\n      const response = await axios.post('http://localhost:3000/tasks', newTask);\n      setTasks([...tasks, response.data]);\n      setNewTask({ title: '', description: '' });\n    } catch (err) {\n      console.error('Error adding task:', err);\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async (id) => {\n    try {\n      await axios.delete(`http://localhost:3000/tasks/${id}`);\n      setTasks(tasks.filter((task) => task.id !== id));\n    } catch (err) {\n      console.error('Error deleting task:', err);\n    }\n  };\n\n  // Update a task\n  const updateTask = async () => {\n    try {\n      const response = await axios.put(`http://localhost:3000/tasks/${currentTask.id}`, currentTask);\n      setTasks(tasks.map((task) => (task.id === currentTask.id ? response.data : task)));\n      setIsEditing(false);\n      setCurrentTask(null);\n    } catch (err) {\n      console.error('Error updating task:', err);\n    }\n  };\n\n  // Set current task for editing\n  const handleEdit = (task) => {\n    setCurrentTask(task);\n    setIsEditing(true);\n  };\n\n  // Handle form input for editing tasks\n  const handleEditChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentTask((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n\n\n  const setAppletView = (view) => {\n    console.log(view);\n    switch (view) {\n\n      case 'home':\n        /**/\n        return \"\";\n        break;\n\n\n      case 'clients':\n        /* Update Existing Task */\n        if (isEditing === true) {\n          // <div className=\"card mb-4 p-3\">\n          //   <h2 className=\"mb-3\">Edit Task</h2>\n          //   <input\n          //     type=\"text\"\n          //     name=\"title\"\n          //     placeholder=\"Task title\"\n          //     className=\"form-control mb-3\"\n          //     value={currentTask.title}\n          //     onChange={handleEditChange}\n          //   />\n          //   <textarea\n          //     name=\"description\"\n          //     placeholder=\"Task description\"\n          //     className=\"form-control mb-3\"\n          //     value={currentTask.description}\n          //     onChange={handleEditChange}\n          //   />\n          //   <button className=\"btn btn-success\" onClick={updateTask}>Update Task</button>\n          // </div>\n        };\n\n        // /* Display Tasks */\n        // <div className=\"list-group\">\n        //   {tasks.map((task) => (\n        //     <div className=\"list-group-item d-flex justify-content-between align-items-center\" key={task.id}>\n        //       <div>\n        //         <h5>{task.title}</h5>\n        //         <p>{task.description}</p>\n        //       </div>\n        //       <div>\n        //         <button className=\"btn btn-danger\" onClick={() => deleteTask(task.id)}>Delete</button>\n        //         <button className=\"btn btn-secondary ms-2\" onClick={() => handleEdit(task)}>Edit</button>\n        //       </div>\n        //     </div>\n        //   ))}\n        // </div>\n        return `<div>'Hello'</div></br></br><div>'world'</div>`;\n        break;\n\n      case 'new-client':\n\n        /* --+-- ADD NEW CLIENT--+-- */\n        // <div className=\"card mb-4 p-3\">\n        //   <h2 className=\"mb-3\">Add New Task</h2>\n        //   <input\n        //     type=\"text\"\n        //     name=\"title\"\n        //     placeholder=\"Task title\"\n        //     className=\"form-control mb-3\"\n        //     value={newTask.title}\n        //     onChange={handleInputChange}\n        //   />\n        //   <textarea\n        //     name=\"description\"\n        //     placeholder=\"Task description\"\n        //     className=\"form-control mb-3\"\n        //     value={newTask.description}\n        //     onChange={handleInputChange}\n        //   />\n        //   <button className=\"btn btn-primary\" onClick={addTask}>Add Task</button>\n        // </div>\n        return '<div>\"Hello\"</div></br></br><div>\"world\"</div>';\n        break;\n\n      default:\n        \n      \n        return \"hedddddddddddddddlp\";\n        break;\n    }\n  }\n\n  return (\n    <div id=\"applet\" className=\"App container col\">\n\n      {setAppletView(appletView)}\n\n    </div>\n  );\n}\n\nexport default Applet;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}