{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Scott\\\\OneDrive\\\\Programming\\\\chatgpt-webapp-test\\\\frontend\\\\src\\\\components\\\\_SharedStateComponent.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SharedStateContext = /*#__PURE__*/createContext();\nexport function SharedStateProvider({\n  children\n}) {\n  _s();\n  // Determines which applet is rendered.\n  const [appletViewState, setAppletViewState] = useState(\"all-clients\");\n\n  // Determines which client is rendered.\n  const [activeClientID, setActiveClientID] = useState(\"\");\n  const [activeClient, setActiveClient] = useState([]);\n\n  // Used to set the UI colors.\n  const [activeHue, setActiveHue] = useState(200);\n\n  // Holds the active client list\n  const [tasks, setTasks] = useState([]);\n  return /*#__PURE__*/_jsxDEV(SharedStateContext.Provider, {\n    value: {\n      appletViewState,\n      setAppletViewState,\n      activeClientID,\n      setActiveClientID,\n      tasks,\n      setTasks,\n      activeClient,\n      setActiveClient,\n      activeHue,\n      setActiveHue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n}\n_s(SharedStateProvider, \"yzNrMDY+MdzPUoY2z8eq0Hh9mmY=\");\n_c = SharedStateProvider;\nvar _c;\n$RefreshReg$(_c, \"SharedStateProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","SharedStateContext","SharedStateProvider","children","_s","appletViewState","setAppletViewState","activeClientID","setActiveClientID","activeClient","setActiveClient","activeHue","setActiveHue","tasks","setTasks","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Scott/OneDrive/Programming/chatgpt-webapp-test/frontend/src/components/_SharedStateComponent.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const SharedStateContext = createContext();\r\n\r\nexport function SharedStateProvider({ children }) {\r\n\r\n\t// Determines which applet is rendered.\r\n\tconst [appletViewState, setAppletViewState] = useState(\"all-clients\");\r\n\r\n\t// Determines which client is rendered.\r\n\tconst [activeClientID, setActiveClientID] = useState(\"\");\r\n\tconst [activeClient, setActiveClient] = useState([]);\r\n\r\n\t// Used to set the UI colors.\r\n\tconst [activeHue, setActiveHue] = useState(200);\r\n\r\n\t// Holds the active client list\r\n\tconst [tasks, setTasks] = useState([]);\r\n \r\n\r\n\treturn (\r\n\t\t<SharedStateContext.Provider value=\t{{ \r\n\t\t\t\t\t\t\t\t\t\t\t\tappletViewState, \tsetAppletViewState, \r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveClientID, \tsetActiveClientID,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttasks,\t\t\t\tsetTasks,\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveClient,\t\tsetActiveClient,\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveHue,\t\t\tsetActiveHue\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t{children}\r\n\t\t</SharedStateContext.Provider>\r\n\t);\r\n\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,kBAAkB,gBAAGJ,aAAa,CAAC,CAAC;AAEjD,OAAO,SAASK,mBAAmBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAEjD;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,aAAa,CAAC;;EAErE;EACA,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,GAAG,CAAC;;EAE/C;EACA,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAGtC,oBACCE,OAAA,CAACC,kBAAkB,CAACc,QAAQ;IAACC,KAAK,EAAG;MAC3BX,eAAe;MAAGC,kBAAkB;MACpCC,cAAc;MAAGC,iBAAiB;MAClCK,KAAK;MAAKC,QAAQ;MAClBL,YAAY;MAAGC,eAAe;MAC9BC,SAAS;MAAIC;IACd,CAAE;IAAAT,QAAA,EACTA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAGhC;AAAChB,EAAA,CA5BeF,mBAAmB;AAAAmB,EAAA,GAAnBnB,mBAAmB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}