{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Scott\\\\OneDrive\\\\Programming\\\\chatgpt-webapp-test\\\\frontend\\\\src\\\\components\\\\views\\\\Applet-Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { SharedStateContext } from './../_SharedStateComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppletSettings() {\n  _s();\n  const {\n    activeHue,\n    setActiveHue\n  } = useContext(SharedStateContext);\n\n  // const setHue = (hue) => {\t\n  // \ttry {\n  // \t\tsetActiveHue(hue);\n  // \t} catch (err) {\n  // \t\tconsole.log(\"Error setting the active hue from the settings menu\", err);\n  // \t}\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"applet-add-new\",\n    className: \"App container col\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-3\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Change UI Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setActiveHue(activeHue + 50),\n      children: \"New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setActiveHue(200),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n}\n_s(AppletSettings, \"KF12Mn8lp2+U2xj4XJg8hG6Lmf8=\");\n_c = AppletSettings;\n;\nvar _c;\n$RefreshReg$(_c, \"AppletSettings\");","map":{"version":3,"names":["React","useContext","useState","useEffect","SharedStateContext","jsxDEV","_jsxDEV","AppletSettings","_s","activeHue","setActiveHue","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Scott/OneDrive/Programming/chatgpt-webapp-test/frontend/src/components/views/Applet-Settings.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { SharedStateContext } from './../_SharedStateComponent';\r\n\r\n\r\nexport default function AppletSettings(){\r\n\r\n\tconst { activeHue, setActiveHue } = useContext(SharedStateContext);\r\n\r\n\r\n\t// const setHue = (hue) => {\t\r\n\t// \ttry {\r\n\t// \t\tsetActiveHue(hue);\r\n\t// \t} catch (err) {\r\n\t// \t\tconsole.log(\"Error setting the active hue from the settings menu\", err);\r\n\t// \t}\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<div id=\"applet-add-new\" className=\"App container col\">\r\n\r\n\t\t\t<h2 className=\"mb-3\">Settings</h2>\r\n\t\t\t<div>Change UI Color</div>\r\n\t\t\t<button onClick={() => setActiveHue(activeHue + 50)}>New</button>\r\n\t\t\t<button onClick={() => setActiveHue(200)}>Reset</button>\r\n\t\t\t\t\t\r\n\t\t</div>\r\n\t);\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,kBAAkB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhE,eAAe,SAASC,cAAcA,CAAA,EAAE;EAAAC,EAAA;EAEvC,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGT,UAAU,CAACG,kBAAkB,CAAC;;EAGlE;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACCE,OAAA;IAAKK,EAAE,EAAC,gBAAgB;IAACC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAErDP,OAAA;MAAIM,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCX,OAAA;MAAAO,QAAA,EAAK;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1BX,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMR,YAAY,CAACD,SAAS,GAAG,EAAE,CAAE;MAAAI,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjEX,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMR,YAAY,CAAC,GAAG,CAAE;MAAAG,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpD,CAAC;AAER;AAACT,EAAA,CAvBuBD,cAAc;AAAAY,EAAA,GAAdZ,cAAc;AAuBrC;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}