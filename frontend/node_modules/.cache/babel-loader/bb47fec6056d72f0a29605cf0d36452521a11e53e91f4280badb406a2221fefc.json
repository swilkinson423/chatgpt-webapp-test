{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Scott\\\\OneDrive\\\\Programming\\\\chatgpt-webapp-test\\\\frontend\\\\src\\\\components\\\\views\\\\Applet-Client-ViewActive.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { SharedStateContext } from './../_SharedStateComponent';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AppletViewActiveClient() {\n  _s();\n  const {\n    tasks,\n    setTasks\n  } = useContext(SharedStateContext);\n  const {\n    activeClientID\n  } = useContext(SharedStateContext);\n  const {\n    activeClient,\n    setActiveClient\n  } = useContext(SharedStateContext);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    // fetchActiveClient();\n    // renderClientCard();\n  }, []);\n\n  // Fetch client based on database ID\n  const fetchActiveClient = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/tasks/${activeClientID}`);\n      const responseArray = [];\n      responseArray.push(response.data);\n      console.log(responseArray);\n      setActiveClient(responseArray);\n      console.log(activeClient);\n    } catch (err) {\n      console.error('Error fetching tasks:', err);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Hello World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }, this)\n    }, void 0, false);\n  };\n\n  // function renderClientCard() {\n\n  // \tfetchActiveClient();\n\n  // \tconsole.log(activeClient);\n\n  // \tconst output = activeClient.map((client) => (\n  // \t\t<div className=\"list-group-item d-flex justify-content-between align-items-center\" key={client.id}>\n  // \t\t\t<div>\n  // \t\t\t\t<h5>{client.title}</h5>\n  // \t\t\t\t<p>{client.description}</p>\n  // \t\t\t</div>\n  // \t\t\t<div>\n  // \t\t\t\t<button className=\"btn btn-danger\" onClick={() => deleteTask(client.id)}>Delete</button>\n  // \t\t\t\t<button className=\"btn btn-secondary ms-2\" onClick={() => handleEdit(client)}>Edit</button>\n  // \t\t\t</div>\n  // \t\t</div>\n  // \t))\n\n  // \treturn (\n  // \t\t<>\n  // \t\t{output}\n  // \t\t</>\n  // \t);\n\n  // };\n\n  // Delete a task\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:3000/tasks/${id}`);\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (err) {\n      console.error('Error deleting task:', err);\n    }\n  };\n\n  // Update a task\n  const updateTask = async () => {\n    try {\n      const response = await axios.put(`http://localhost:3000/tasks/${currentTask.id}`, currentTask);\n      setTasks(tasks.map(task => task.id === currentTask.id ? response.data : task));\n      setIsEditing(false);\n      setCurrentTask(null);\n    } catch (err) {\n      console.error('Error updating task:', err);\n    }\n  };\n\n  // Set current task for editing\n  const handleEdit = task => {\n    setCurrentTask(task);\n    setIsEditing(true);\n  };\n\n  // Handle form input for editing tasks\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentTask(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"applet\",\n      className: \"App container col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"applet-view-all\",\n        className: \"App container col\",\n        children: [isEditing === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-4 p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mb-3\",\n            children: \"Edit Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"Task title\",\n            className: \"form-control mb-3\",\n            value: currentTask.title,\n            onChange: handleEditChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            placeholder: \"Task description\",\n            className: \"form-control mb-3\",\n            value: currentTask.description,\n            onChange: handleEditChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: updateTask,\n            children: \"Update Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group\",\n          children: fetchActiveClient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(AppletViewActiveClient, \"j3P5w93d1q3Fs+YJWWn5m+UZnv8=\");\n_c = AppletViewActiveClient;\n;\nvar _c;\n$RefreshReg$(_c, \"AppletViewActiveClient\");","map":{"version":3,"names":["React","useContext","useState","useEffect","axios","SharedStateContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AppletViewActiveClient","_s","tasks","setTasks","activeClientID","activeClient","setActiveClient","isEditing","setIsEditing","currentTask","setCurrentTask","fetchActiveClient","response","get","responseArray","push","data","console","log","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","deleteTask","id","delete","filter","task","updateTask","put","map","handleEdit","handleEditChange","e","name","value","target","prev","className","type","placeholder","title","onChange","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Scott/OneDrive/Programming/chatgpt-webapp-test/frontend/src/components/views/Applet-Client-ViewActive.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { SharedStateContext } from './../_SharedStateComponent';\r\n\r\nexport default function AppletViewActiveClient() {\r\n\r\n\tconst { tasks, setTasks } = useContext(SharedStateContext);\r\n\tconst { activeClientID } = useContext(SharedStateContext);\r\n\tconst { activeClient, setActiveClient } = useContext(SharedStateContext);\r\n\t\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\tconst [currentTask, setCurrentTask] = useState(null);\r\n\r\n\r\n\t// Fetch tasks on component mount\r\n\tuseEffect(() => {\r\n\t\t// fetchActiveClient();\r\n\t\t// renderClientCard();\r\n\t}, []);\r\n\r\n\t// Fetch client based on database ID\r\n\tconst fetchActiveClient = async() => {\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get(`http://localhost:3000/tasks/${activeClientID}`);\r\n\t\t\tconst responseArray = [];\r\n\r\n\t\t\tresponseArray.push(response.data);\r\n\r\n\t\t\tconsole.log(responseArray);\r\n\r\n\t\t\tsetActiveClient(responseArray);\r\n\r\n\t\t\tconsole.log(activeClient);\r\n\t\t\t\r\n\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Error fetching tasks:', err);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<div>Hello World</div>\r\n\t\t\t{/* {activeClient.map((client) => (\r\n\r\n\t\t\t\t\t<div className=\"list-group-item d-flex justify-content-between align-items-center\" key={client.id}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h5>{client.title}</h5>\r\n\t\t\t\t\t\t\t<p>{client.description}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={() => deleteTask(client.id)}>Delete</button>\r\n\t\t\t\t\t\t\t<button className=\"btn btn-secondary ms-2\" onClick={() => handleEdit(client)}>Edit</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t))} */}\r\n\t\t\t</>\r\n\t\t);\r\n\r\n\t};\r\n\r\n\r\n\t// function renderClientCard() {\r\n\r\n\t// \tfetchActiveClient();\r\n\r\n\t// \tconsole.log(activeClient);\r\n\r\n\t// \tconst output = activeClient.map((client) => (\r\n\t// \t\t<div className=\"list-group-item d-flex justify-content-between align-items-center\" key={client.id}>\r\n\t// \t\t\t<div>\r\n\t// \t\t\t\t<h5>{client.title}</h5>\r\n\t// \t\t\t\t<p>{client.description}</p>\r\n\t// \t\t\t</div>\r\n\t// \t\t\t<div>\r\n\t// \t\t\t\t<button className=\"btn btn-danger\" onClick={() => deleteTask(client.id)}>Delete</button>\r\n\t// \t\t\t\t<button className=\"btn btn-secondary ms-2\" onClick={() => handleEdit(client)}>Edit</button>\r\n\t// \t\t\t</div>\r\n\t// \t\t</div>\r\n\t// \t))\r\n\r\n\t// \treturn (\r\n\t// \t\t<>\r\n\t// \t\t{output}\r\n\t// \t\t</>\r\n\t// \t);\r\n\r\n\t// };\r\n\r\n\t// Delete a task\r\n\tconst deleteTask = async (id) => {\r\n\t\ttry {\r\n\t\t\tawait axios.delete(`http://localhost:3000/tasks/${id}`);\r\n\t\t\tsetTasks(tasks.filter((task) => task.id !== id));\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Error deleting task:', err);\r\n\t\t}\r\n\t};\r\n\r\n\t// Update a task\r\n\tconst updateTask = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.put(`http://localhost:3000/tasks/${currentTask.id}`, currentTask);\r\n\t\t\tsetTasks(tasks.map((task) => (task.id === currentTask.id ? response.data : task)));\r\n\t\t\tsetIsEditing(false);\r\n\t\t\tsetCurrentTask(null);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Error updating task:', err);\r\n\t\t}\r\n\t};\r\n\r\n\t// Set current task for editing\r\n\tconst handleEdit = (task) => {\r\n\t\tsetCurrentTask(task);\r\n\t\tsetIsEditing(true);\r\n\t};\r\n\r\n\t// Handle form input for editing tasks\r\n\tconst handleEditChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetCurrentTask((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\t[name]: value,\r\n\t\t}));\r\n\t};\r\n\r\n\treturn (\r\n\r\n\r\n\t\t<>\r\n\t\t\t{/* MAIN WINDOW */}\r\n\t\t\t<div id=\"applet\" className=\"App container col\">\r\n\r\n\t\t\t\t<div id=\"applet-view-all\" className=\"App container col\">\r\n\r\n\t\t\t\t\t{/* Update Existing Task */}\r\n\t\t\t\t\t{isEditing === true ? (\r\n\t\t\t\t\t\t<div className=\"card mb-4 p-3\">\r\n\t\t\t\t\t\t\t<h2 className=\"mb-3\">Edit Task</h2>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Task title\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control mb-3\"\r\n\t\t\t\t\t\t\t\tvalue={currentTask.title}\r\n\t\t\t\t\t\t\t\tonChange={handleEditChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Task description\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control mb-3\"\r\n\t\t\t\t\t\t\t\tvalue={currentTask.description}\r\n\t\t\t\t\t\t\t\tonChange={handleEditChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={updateTask}>Update Task</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<></>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{/* Display Tasks */}\r\n\t\t\t\t\t<div className=\"list-group\">\r\n\t\t\t\t\t\t{fetchActiveClient}\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}