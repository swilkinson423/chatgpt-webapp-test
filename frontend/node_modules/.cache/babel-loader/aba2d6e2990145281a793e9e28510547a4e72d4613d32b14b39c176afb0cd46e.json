{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Scott\\\\OneDrive\\\\Programming\\\\chatgpt-webapp-test\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\\"Hello World\\\"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this)\n  // <div style={{ padding: '20px' }}>\n  //   <Typography variant=\"h4\" gutterBottom>\n  //     Hello from Material-UI\n  //   </Typography>\n  //   <Button variant=\"contained\" color=\"primary\">\n  //     Click Me\n  //   </Button>\n  // </div>\n  ;\n}\n_c = App;\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// //import Task from './components/Task';\n// //import './styles/App.css';\n\n// import { Button, TextField, Card, Typography } from '@mui/material';\n\n// function App() {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTask, setNewTask] = useState({ title: '', description: '' });\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [currentTask, setCurrentTask] = useState(null);\n\n//   // Fetch tasks on component mount\n//   useEffect(() => {\n//     fetchTasks();\n//   }, []);\n\n//   // Fetch all tasks from the back-end API\n//   const fetchTasks = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:3000/tasks');\n//       setTasks(response.data);\n//     } catch (err) {\n//       console.error('Error fetching tasks:', err);\n//     }\n//   };\n\n//   // Handle form input for new tasks\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewTask((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   // Create a new task\n//   const addTask = async () => {\n//     try {\n//       const response = await axios.post('http://localhost:3000/tasks', newTask);\n//       setTasks([...tasks, response.data]);\n//       setNewTask({ title: '', description: '' });\n//     } catch (err) {\n//       console.error('Error adding task:', err);\n//     }\n//   };\n\n//   // Delete a task\n//   const deleteTask = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:3000/tasks/${id}`);\n//       setTasks(tasks.filter((task) => task.id !== id));\n//     } catch (err) {\n//       console.error('Error deleting task:', err);\n//     }\n//   };\n\n//   // Update a task\n//   const updateTask = async () => {\n//     try {\n//       const response = await axios.put(`http://localhost:3000/tasks/${currentTask.id}`, currentTask);\n//       setTasks(tasks.map((task) => (task.id === currentTask.id ? response.data : task)));\n//       setIsEditing(false);\n//       setCurrentTask(null);\n//     } catch (err) {\n//       console.error('Error updating task:', err);\n//     }\n//   };\n\n//   // Set current task for editing\n//   const handleEdit = (task) => {\n//     setCurrentTask(task);\n//     setIsEditing(true);\n//   };\n\n//   // Handle form input for editing tasks\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setCurrentTask((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Typography variant=\"h3\" gutterBottom align=\"center\">\n//         Task Manager\n//       </Typography>\n\n//       {/* New Task Form */}\n//       {!isEditing ? (\n//         <Card className=\"mb-4 p-3\">\n//           <Typography variant=\"h5\" gutterBottom>\n//             Add New Task\n//           </Typography>\n//           <TextField\n//             label=\"Task title\"\n//             name=\"title\"\n//             variant=\"outlined\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={newTask.title}\n//             onChange={handleInputChange}\n//           />\n//           <TextField\n//             label=\"Task description\"\n//             name=\"description\"\n//             variant=\"outlined\"\n//             fullWidth\n//             margin=\"normal\"\n//             multiline\n//             rows={4}\n//             value={newTask.description}\n//             onChange={handleInputChange}\n//           />\n//           <Button variant=\"contained\" color=\"primary\" onClick={addTask}>\n//             Add Task\n//           </Button>\n//         </Card>\n//       ) : (\n//         <Card className=\"mb-4 p-3\">\n//           <Typography variant=\"h5\" gutterBottom>\n//             Edit Task\n//           </Typography>\n//           <TextField\n//             label=\"Task title\"\n//             name=\"title\"\n//             variant=\"outlined\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={currentTask.title}\n//             onChange={handleEditChange}\n//           />\n//           <TextField\n//             label=\"Task description\"\n//             name=\"description\"\n//             variant=\"outlined\"\n//             fullWidth\n//             margin=\"normal\"\n//             multiline\n//             rows={4}\n//             value={currentTask.description}\n//             onChange={handleEditChange}\n//           />\n//           <Button variant=\"contained\" color=\"success\" onClick={updateTask}>\n//             Update Task\n//           </Button>\n//         </Card>\n//       )}\n\n//       {/* Display Tasks */}\n//       <div className=\"task-list\">\n//         {tasks.map((task) => (\n//           <Card className=\"mb-4 p-3\" key={task.id}>\n//             <Typography variant=\"h6\">{task.title}</Typography>\n//             <Typography variant=\"body1\">{task.description}</Typography>\n//             <Button variant=\"contained\" color=\"error\" onClick={() => deleteTask(task.id)}>\n//               Delete\n//             </Button>\n//             <Button variant=\"contained\" color=\"secondary\" onClick={() => handleEdit(task)} style={{ marginLeft: '10px' }}>\n//               Edit\n//             </Button>\n//           </Card>\n//         ))}\n//       </div>\n//     </div>\n//   );\n\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Button","Typography","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Scott/OneDrive/Programming/chatgpt-webapp-test/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Button, Typography } from '@mui/material';\n\nfunction App() {\n  return (\n    <div>\"Hello World\"</div>\n    // <div style={{ padding: '20px' }}>\n    //   <Typography variant=\"h4\" gutterBottom>\n    //     Hello from Material-UI\n    //   </Typography>\n    //   <Button variant=\"contained\" color=\"primary\">\n    //     Click Me\n    //   </Button>\n    // </div>\n  );\n}\n\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// //import Task from './components/Task';\n// //import './styles/App.css';\n\n// import { Button, TextField, Card, Typography } from '@mui/material';\n\n\n// function App() {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTask, setNewTask] = useState({ title: '', description: '' });\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [currentTask, setCurrentTask] = useState(null);\n\n//   // Fetch tasks on component mount\n//   useEffect(() => {\n//     fetchTasks();\n//   }, []);\n\n//   // Fetch all tasks from the back-end API\n//   const fetchTasks = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:3000/tasks');\n//       setTasks(response.data);\n//     } catch (err) {\n//       console.error('Error fetching tasks:', err);\n//     }\n//   };\n\n//   // Handle form input for new tasks\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewTask((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   // Create a new task\n//   const addTask = async () => {\n//     try {\n//       const response = await axios.post('http://localhost:3000/tasks', newTask);\n//       setTasks([...tasks, response.data]);\n//       setNewTask({ title: '', description: '' });\n//     } catch (err) {\n//       console.error('Error adding task:', err);\n//     }\n//   };\n\n//   // Delete a task\n//   const deleteTask = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:3000/tasks/${id}`);\n//       setTasks(tasks.filter((task) => task.id !== id));\n//     } catch (err) {\n//       console.error('Error deleting task:', err);\n//     }\n//   };\n\n//   // Update a task\n//   const updateTask = async () => {\n//     try {\n//       const response = await axios.put(`http://localhost:3000/tasks/${currentTask.id}`, currentTask);\n//       setTasks(tasks.map((task) => (task.id === currentTask.id ? response.data : task)));\n//       setIsEditing(false);\n//       setCurrentTask(null);\n//     } catch (err) {\n//       console.error('Error updating task:', err);\n//     }\n//   };\n\n//   // Set current task for editing\n//   const handleEdit = (task) => {\n//     setCurrentTask(task);\n//     setIsEditing(true);\n//   };\n\n//   // Handle form input for editing tasks\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setCurrentTask((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Typography variant=\"h3\" gutterBottom align=\"center\">\n//         Task Manager\n//       </Typography>\n  \n//       {/* New Task Form */}\n//       {!isEditing ? (\n//         <Card className=\"mb-4 p-3\">\n//           <Typography variant=\"h5\" gutterBottom>\n//             Add New Task\n//           </Typography>\n//           <TextField\n//             label=\"Task title\"\n//             name=\"title\"\n//             variant=\"outlined\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={newTask.title}\n//             onChange={handleInputChange}\n//           />\n//           <TextField\n//             label=\"Task description\"\n//             name=\"description\"\n//             variant=\"outlined\"\n//             fullWidth\n//             margin=\"normal\"\n//             multiline\n//             rows={4}\n//             value={newTask.description}\n//             onChange={handleInputChange}\n//           />\n//           <Button variant=\"contained\" color=\"primary\" onClick={addTask}>\n//             Add Task\n//           </Button>\n//         </Card>\n//       ) : (\n//         <Card className=\"mb-4 p-3\">\n//           <Typography variant=\"h5\" gutterBottom>\n//             Edit Task\n//           </Typography>\n//           <TextField\n//             label=\"Task title\"\n//             name=\"title\"\n//             variant=\"outlined\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={currentTask.title}\n//             onChange={handleEditChange}\n//           />\n//           <TextField\n//             label=\"Task description\"\n//             name=\"description\"\n//             variant=\"outlined\"\n//             fullWidth\n//             margin=\"normal\"\n//             multiline\n//             rows={4}\n//             value={currentTask.description}\n//             onChange={handleEditChange}\n//           />\n//           <Button variant=\"contained\" color=\"success\" onClick={updateTask}>\n//             Update Task\n//           </Button>\n//         </Card>\n//       )}\n  \n//       {/* Display Tasks */}\n//       <div className=\"task-list\">\n//         {tasks.map((task) => (\n//           <Card className=\"mb-4 p-3\" key={task.id}>\n//             <Typography variant=\"h6\">{task.title}</Typography>\n//             <Typography variant=\"body1\">{task.description}</Typography>\n//             <Button variant=\"contained\" color=\"error\" onClick={() => deleteTask(task.id)}>\n//               Delete\n//             </Button>\n//             <Button variant=\"contained\" color=\"secondary\" onClick={() => handleEdit(task)} style={{ marginLeft: '10px' }}>\n//               Edit\n//             </Button>\n//           </Card>\n//         ))}\n//       </div>\n//     </div>\n//   );\n  \n// }\n\n// export default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,EAAK;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAACC,EAAA,GAZQN,GAAG;AAcZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}